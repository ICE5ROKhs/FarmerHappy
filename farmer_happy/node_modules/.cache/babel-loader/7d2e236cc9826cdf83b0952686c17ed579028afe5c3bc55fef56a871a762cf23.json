{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { authService } from '../api/auth';\nexport default {\n  name: 'Login',\n  setup() {\n    const router = useRouter();\n    const loading = ref(false);\n    const form = reactive({\n      phone: '',\n      password: ''\n    });\n    const errors = reactive({\n      phone: '',\n      password: ''\n    });\n    const validateForm = () => {\n      let isValid = true;\n      errors.phone = '';\n      errors.password = '';\n      if (!form.phone) {\n        errors.phone = '请输入手机号';\n        isValid = false;\n      } else if (!/^1[3-9]\\d{9}$/.test(form.phone)) {\n        errors.phone = '请输入有效的手机号';\n        isValid = false;\n      }\n      if (!form.password) {\n        errors.password = '请输入密码';\n        isValid = false;\n      }\n      return isValid;\n    };\n    const handleSubmit = async () => {\n      if (!validateForm()) return;\n      loading.value = true;\n      try {\n        await authService.login(form);\n        router.push('/home');\n      } catch (error) {\n        if (error.message === 'Invalid credentials') {\n          errors.password = '手机号或密码错误';\n        } else {\n          errors.password = '登录失败，请稍后重试';\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      form,\n      errors,\n      loading,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","authService","name","setup","router","loading","form","phone","password","errors","validateForm","isValid","test","handleSubmit","value","login","push","error","message"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <div class=\"auth-card\">\r\n      <h1 class=\"auth-title\">欢迎登录农乐平台</h1>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">手机号</label>\r\n          <input\r\n            v-model=\"form.phone\"\r\n            type=\"tel\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.phone }\"\r\n            placeholder=\"请输入手机号\"\r\n          />\r\n          <span v-if=\"errors.phone\" class=\"form-error\">{{ errors.phone }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">密码</label>\r\n          <input\r\n            v-model=\"form.password\"\r\n            type=\"password\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.password }\"\r\n            placeholder=\"请输入密码\"\r\n          />\r\n          <span v-if=\"errors.password\" class=\"form-error\">{{ errors.password }}</span>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n          {{ loading ? '登录中...' : '登录' }}\r\n        </button>\r\n\r\n        <div class=\"auth-switch\">\r\n          还没有账号？\r\n          <router-link to=\"/register\">立即注册</router-link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { authService } from '../api/auth';\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const router = useRouter();\r\n    const loading = ref(false);\r\n    const form = reactive({\r\n      phone: '',\r\n      password: ''\r\n    });\r\n    const errors = reactive({\r\n      phone: '',\r\n      password: ''\r\n    });\r\n\r\n    const validateForm = () => {\r\n      let isValid = true;\r\n      errors.phone = '';\r\n      errors.password = '';\r\n\r\n      if (!form.phone) {\r\n        errors.phone = '请输入手机号';\r\n        isValid = false;\r\n      } else if (!/^1[3-9]\\d{9}$/.test(form.phone)) {\r\n        errors.phone = '请输入有效的手机号';\r\n        isValid = false;\r\n      }\r\n\r\n      if (!form.password) {\r\n        errors.password = '请输入密码';\r\n        isValid = false;\r\n      }\r\n\r\n      return isValid;\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n      if (!validateForm()) return;\r\n\r\n      loading.value = true;\r\n      try {\r\n        await authService.login(form);\r\n        router.push('/home');\r\n      } catch (error) {\r\n        if (error.message === 'Invalid credentials') {\r\n          errors.password = '手机号或密码错误';\r\n        } else {\r\n          errors.password = '登录失败，请稍后重试';\r\n        }\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    return {\r\n      form,\r\n      errors,\r\n      loading,\r\n      handleSubmit\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n</style>\r\n"],"mappings":"AA2CA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,WAAU,QAAS,aAAa;AAEzC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,OAAM,GAAIP,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMQ,IAAG,GAAIP,QAAQ,CAAC;MACpBQ,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,MAAK,GAAIV,QAAQ,CAAC;MACtBQ,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAME,YAAW,GAAIA,CAAA,KAAM;MACzB,IAAIC,OAAM,GAAI,IAAI;MAClBF,MAAM,CAACF,KAAI,GAAI,EAAE;MACjBE,MAAM,CAACD,QAAO,GAAI,EAAE;MAEpB,IAAI,CAACF,IAAI,CAACC,KAAK,EAAE;QACfE,MAAM,CAACF,KAAI,GAAI,QAAQ;QACvBI,OAAM,GAAI,KAAK;MACjB,OAAO,IAAI,CAAC,eAAe,CAACC,IAAI,CAACN,IAAI,CAACC,KAAK,CAAC,EAAE;QAC5CE,MAAM,CAACF,KAAI,GAAI,WAAW;QAC1BI,OAAM,GAAI,KAAK;MACjB;MAEA,IAAI,CAACL,IAAI,CAACE,QAAQ,EAAE;QAClBC,MAAM,CAACD,QAAO,GAAI,OAAO;QACzBG,OAAM,GAAI,KAAK;MACjB;MAEA,OAAOA,OAAO;IAChB,CAAC;IAED,MAAME,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACH,YAAY,CAAC,CAAC,EAAE;MAErBL,OAAO,CAACS,KAAI,GAAI,IAAI;MACpB,IAAI;QACF,MAAMb,WAAW,CAACc,KAAK,CAACT,IAAI,CAAC;QAC7BF,MAAM,CAACY,IAAI,CAAC,OAAO,CAAC;MACtB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACC,OAAM,KAAM,qBAAqB,EAAE;UAC3CT,MAAM,CAACD,QAAO,GAAI,UAAU;QAC9B,OAAO;UACLC,MAAM,CAACD,QAAO,GAAI,YAAY;QAChC;MACF,UAAU;QACRH,OAAO,CAACS,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAED,OAAO;MACLR,IAAI;MACJG,MAAM;MACNJ,OAAO;MACPQ;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}