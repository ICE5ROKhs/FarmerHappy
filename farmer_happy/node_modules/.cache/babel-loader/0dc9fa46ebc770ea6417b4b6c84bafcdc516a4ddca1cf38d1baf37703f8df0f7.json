{"ast":null,"code":"import { ref, reactive, onMounted, onUnmounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { authService } from '../api/auth';\nimport logger from '../utils/logger';\nexport default {\n  name: 'Login',\n  setup() {\n    const router = useRouter();\n    const loading = ref(false);\n    const form = reactive({\n      phone: '',\n      password: '',\n      userType: ''\n    });\n    const errors = reactive({\n      phone: '',\n      password: '',\n      userType: ''\n    });\n    onMounted(() => {\n      logger.lifecycle('Login', 'mounted');\n      logger.info('LOGIN_COMPONENT', '登录页面已加载');\n    });\n    onUnmounted(() => {\n      logger.lifecycle('Login', 'unmounted');\n    });\n    const validateForm = () => {\n      logger.debug('LOGIN_COMPONENT', '开始验证登录表单');\n      let isValid = true;\n      errors.phone = '';\n      errors.password = '';\n      errors.userType = '';\n      if (!form.phone) {\n        errors.phone = '请输入手机号';\n        isValid = false;\n      } else if (!/^1[3-9]\\d{9}$/.test(form.phone)) {\n        errors.phone = '请输入有效的手机号';\n        isValid = false;\n      }\n      if (!form.password) {\n        errors.password = '请输入密码';\n        isValid = false;\n      }\n      if (!form.userType) {\n        errors.userType = '请选择用户类型';\n        isValid = false;\n      }\n      logger.validation('LoginForm', isValid, errors);\n      return isValid;\n    };\n    const handleSubmit = async () => {\n      logger.userAction('LOGIN_SUBMIT', {\n        phone: form.phone,\n        userType: form.userType\n      });\n      if (!validateForm()) {\n        logger.warn('LOGIN_COMPONENT', '表单验证失败');\n        return;\n      }\n      loading.value = true;\n      logger.info('LOGIN_COMPONENT', '开始提交登录请求', {\n        phone: form.phone,\n        userType: form.userType\n      });\n      try {\n        await authService.login(form);\n        logger.info('LOGIN_COMPONENT', '登录成功，准备跳转到首页');\n        logger.navigation('/login', '/home');\n        router.push('/home');\n      } catch (error) {\n        logger.error('LOGIN_COMPONENT', '登录失败', {\n          phone: form.phone,\n          userType: form.userType,\n          errorMessage: error.message || error\n        }, error);\n\n        // 根据错误消息显示对应的提示\n        const errorMsg = typeof error === 'string' ? error : error.message || error.toString();\n        if (errorMsg.includes('用户名或密码错误') || errorMsg.includes('Invalid credentials')) {\n          errors.password = '手机号或密码错误';\n          logger.warn('LOGIN_COMPONENT', '登录凭据无效');\n        } else if (errorMsg.includes('服务器内部错误') || errorMsg.includes('数据库')) {\n          errors.password = '服务器错误';\n          logger.error('LOGIN_COMPONENT', '服务器内部错误');\n        } else {\n          errors.password = errorMsg || '登录失败，请稍后重试';\n          logger.error('LOGIN_COMPONENT', '登录出现错误', {\n            errorMsg\n          });\n        }\n      } finally {\n        loading.value = false;\n        logger.debug('LOGIN_COMPONENT', '登录请求处理完成');\n      }\n    };\n    return {\n      form,\n      errors,\n      loading,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","onUnmounted","useRouter","authService","logger","name","setup","router","loading","form","phone","password","userType","errors","lifecycle","info","validateForm","debug","isValid","test","validation","handleSubmit","userAction","warn","value","login","navigation","push","error","errorMessage","message","errorMsg","toString","includes"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <div class=\"auth-card\">\r\n      <h1 class=\"auth-title\">欢迎登录农乐平台</h1>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">手机号</label>\r\n          <input\r\n            v-model=\"form.phone\"\r\n            type=\"tel\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.phone }\"\r\n            placeholder=\"请输入手机号\"\r\n          />\r\n          <span v-if=\"errors.phone\" class=\"form-error\">{{ errors.phone }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">密码</label>\r\n          <input\r\n            v-model=\"form.password\"\r\n            type=\"password\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.password }\"\r\n            placeholder=\"请输入密码\"\r\n          />\r\n          <span v-if=\"errors.password\" class=\"form-error\">{{ errors.password }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">用户类型</label>\r\n          <select\r\n            v-model=\"form.userType\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.userType }\"\r\n          >\r\n            <option value=\"\">请选择用户类型</option>\r\n            <option value=\"farmer\">农户</option>\r\n            <option value=\"buyer\">买家</option>\r\n            <option value=\"expert\">技术专家</option>\r\n            <option value=\"bank\">银行</option>\r\n          </select>\r\n          <span v-if=\"errors.userType\" class=\"form-error\">{{ errors.userType }}</span>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n          {{ loading ? '登录中...' : '登录' }}\r\n        </button>\r\n\r\n        <div class=\"auth-switch\">\r\n          还没有账号？\r\n          <router-link to=\"/register\">立即注册</router-link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onUnmounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { authService } from '../api/auth';\r\nimport logger from '../utils/logger';\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const router = useRouter();\r\n    const loading = ref(false);\r\n    const form = reactive({\r\n      phone: '',\r\n      password: '',\r\n      userType: ''\r\n    });\r\n    const errors = reactive({\r\n      phone: '',\r\n      password: '',\r\n      userType: ''\r\n    });\r\n\r\n    onMounted(() => {\r\n      logger.lifecycle('Login', 'mounted');\r\n      logger.info('LOGIN_COMPONENT', '登录页面已加载');\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      logger.lifecycle('Login', 'unmounted');\r\n    });\r\n\r\n    const validateForm = () => {\r\n      logger.debug('LOGIN_COMPONENT', '开始验证登录表单');\r\n      let isValid = true;\r\n      errors.phone = '';\r\n      errors.password = '';\r\n      errors.userType = '';\r\n\r\n      if (!form.phone) {\r\n        errors.phone = '请输入手机号';\r\n        isValid = false;\r\n      } else if (!/^1[3-9]\\d{9}$/.test(form.phone)) {\r\n        errors.phone = '请输入有效的手机号';\r\n        isValid = false;\r\n      }\r\n\r\n      if (!form.password) {\r\n        errors.password = '请输入密码';\r\n        isValid = false;\r\n      }\r\n\r\n      if (!form.userType) {\r\n        errors.userType = '请选择用户类型';\r\n        isValid = false;\r\n      }\r\n\r\n      logger.validation('LoginForm', isValid, errors);\r\n      return isValid;\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n      logger.userAction('LOGIN_SUBMIT', { phone: form.phone, userType: form.userType });\r\n      \r\n      if (!validateForm()) {\r\n        logger.warn('LOGIN_COMPONENT', '表单验证失败');\r\n        return;\r\n      }\r\n\r\n      loading.value = true;\r\n      logger.info('LOGIN_COMPONENT', '开始提交登录请求', { \r\n        phone: form.phone,\r\n        userType: form.userType \r\n      });\r\n      \r\n      try {\r\n        await authService.login(form);\r\n        logger.info('LOGIN_COMPONENT', '登录成功，准备跳转到首页');\r\n        logger.navigation('/login', '/home');\r\n        router.push('/home');\r\n      } catch (error) {\r\n        logger.error('LOGIN_COMPONENT', '登录失败', {\r\n          phone: form.phone,\r\n          userType: form.userType,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        \r\n        // 根据错误消息显示对应的提示\r\n        const errorMsg = typeof error === 'string' ? error : error.message || error.toString();\r\n        \r\n        if (errorMsg.includes('用户名或密码错误') || errorMsg.includes('Invalid credentials')) {\r\n          errors.password = '手机号或密码错误';\r\n          logger.warn('LOGIN_COMPONENT', '登录凭据无效');\r\n        } else if (errorMsg.includes('服务器内部错误') || errorMsg.includes('数据库')) {\r\n          errors.password = '服务器错误';\r\n          logger.error('LOGIN_COMPONENT', '服务器内部错误');\r\n        } else {\r\n          errors.password = errorMsg || '登录失败，请稍后重试';\r\n          logger.error('LOGIN_COMPONENT', '登录出现错误', { errorMsg });\r\n        }\r\n      } finally {\r\n        loading.value = false;\r\n        logger.debug('LOGIN_COMPONENT', '登录请求处理完成');\r\n      }\r\n    };\r\n\r\n    return {\r\n      form,\r\n      errors,\r\n      loading,\r\n      handleSubmit\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}